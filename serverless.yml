service: challengue

frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-stage-manager
  - serverless-deployment-bucket
  - serverless-esbuild

custom:
  base: ${self:service}-${self:provider.stage}
  #ESBUILD
  esbuild:
    bundle: true
    minify: true
  #ALLOWED STAGES
  stages:
    - develop
    - staging
    - prod
  tableName: ${self:custom.base}-characters

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'develop'}
  region: ${opt:region, 'us-east-1'}
  timeout: 15
  deploymentBucket:
    name: ${self:custom.base}
    serverSideEncryption: AES256
  environment:
    TABLE_NAME: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:BatchGetItem
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.tableName}
        - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.tableName}/index/*

functions:
  get-characters:
    description: GET characters
    handler: src/api/get-characters.handler
    events:
      - http:
          path: /characters
          method: get
  get-character:
    description: GET character
    handler: src/api/get-character.handler
    events:
      - http:
          path: /characters/{id}
          method: get
  post-character: 
    description: POST character
    handler: src/api/post-character.handler
    events:
      - http:
          path: /characters
          method: post
  get-characters-db:
    description: GET characters from DB
    handler: src/api/get-characters-db.handler
    events:
      - http:
          path: /charactersdb
          method: get

resources:
  Resources:
    StarWarsBD:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST